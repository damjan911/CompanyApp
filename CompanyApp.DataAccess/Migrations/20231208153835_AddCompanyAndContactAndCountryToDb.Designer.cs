// <auto-generated />
using CompanyApp.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanyApp.DataAccess.Migrations
{
    [DbContext(typeof(CompanyAppDbContext))]
    [Migration("20231208153835_AddCompanyAndContactAndCountryToDb")]
    partial class AddCompanyAndContactAndCountryToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompanyApp.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Industry")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "ABC Corporation",
                            Industry = 0
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "XYZ Ltd",
                            Industry = 1
                        },
                        new
                        {
                            Id = 3,
                            CompanyName = "TechFab Solutions",
                            Industry = 2
                        },
                        new
                        {
                            Id = 4,
                            CompanyName = "RoadMasters Automotive",
                            Industry = 3
                        });
                });

            modelBuilder.Entity("CompanyApp.Domain.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("JobTitle")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CountryId");

                    b.ToTable("Contact");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            ContactName = "John Doe",
                            CountryId = 2,
                            JobTitle = 0
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            ContactName = "Jane Smith",
                            CountryId = 1,
                            JobTitle = 3
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 3,
                            ContactName = "Bob Johnson",
                            CountryId = 4,
                            JobTitle = 1
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 4,
                            ContactName = "Martin Peterson",
                            CountryId = 3,
                            JobTitle = 2
                        });
                });

            modelBuilder.Entity("CompanyApp.Domain.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryName = "Germany"
                        },
                        new
                        {
                            Id = 2,
                            CountryName = "France"
                        },
                        new
                        {
                            Id = 3,
                            CountryName = "Poland"
                        },
                        new
                        {
                            Id = 4,
                            CountryName = "Swedan"
                        });
                });

            modelBuilder.Entity("CompanyApp.Domain.Entities.Contact", b =>
                {
                    b.HasOne("CompanyApp.Domain.Entities.Company", "Company")
                        .WithMany("Contacts")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyApp.Domain.Entities.Country", "Country")
                        .WithMany("Contact")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CompanyApp.Domain.Entities.Company", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("CompanyApp.Domain.Entities.Country", b =>
                {
                    b.Navigation("Contact");
                });
#pragma warning restore 612, 618
        }
    }
}
